###################### Start of libnfc-cxd22xx.conf #######################

###############################################################################
# Application options
NFC_DEBUG_ENABLED=1

###############################################################################  
# getVenderConfig v1.1 start
###############################################################################
# Vendor Specific Proprietary Protocol & Discovery Configuration
# Set to 0xFF if unsupported
#  byte[0] NCI_PROTOCOL_18092_ACTIVE
#  byte[1] NCI_PROTOCOL_B_PRIME
#  byte[2] NCI_PROTOCOL_DUAL
#  byte[3] NCI_PROTOCOL_15693
#  byte[4] NCI_PROTOCOL_KOVIO
#  byte[5] NCI_PROTOCOL_MIFARE
#  byte[6] NCI_DISCOVERY_TYPE_POLL_KOVIO
#  byte[7] NCI_DISCOVERY_TYPE_POLL_B_PRIME
#  byte[8] NCI_DISCOVERY_TYPE_LISTEN_B_PRIME
NFA_PROPRIETARY_CFG={FF:FF:FF:83:8A:90:77:FF:FF}

###############################################################################
# Bail out mode
#  If set to 1, NFCC is using bail out mode for either Type A or Type B poll.
NFA_POLL_BAIL_OUT_MODE=0x01

###############################################################################
# Configure the default "off-host" route at the Java layer
DEFAULT_OFFHOST_ROUTE=0x01

###############################################################################
# Configure the single default SE to use.  The default is to use the first
# SE that is detected by the stack.  This value might be used when the phone
# supports multiple SE (e.g. 0xC0 and 0x80) but you want to force it to use
# one of them (e.g. 0xC0).
DEFAULT_NFCF_ROUTE=0x02

###############################################################################
# Configure the default NfcA,B(AOSP only)/IsoDep protocol route. Can be
# either a secure element (e.g. 0xF4) or the host (0x00)
DEFAULT_ROUTE=0x00

###############################################################################
#Set the default Felica T3T System Code OffHost route Location(NCI2.0) :
#This settings will be used when application does not set this parameter
# host  0x00
# UICC  0x01
# eSE   0x02
DEFAULT_SYS_CODE_ROUTE=0x02

###############################################################################
#Set the Felica T3T System Code Power state(NCI2.0) :
#This settings will be used when application does not set this parameter
# bit pos 0 = Switch On
# bit pos 1 = Switch Off
# bit pos 2 = Battery Off
# bit pos 3 = Screen On lock
# bit pos 4 = Screen off unlock
# bit pos 5 = Screen Off lock
#DEFAULT_SYS_CODE_PWR_STATE=0x39

###############################################################################
# Configure HciEventManager pipe id
OFF_HOST_ESE_PIPE_ID=0xff
OFF_HOST_SIM_PIPE_ID=0x43

###############################################################################
# Extended APDU length for ISO_DEP
ISO_DEP_MAX_TRANSCEIVE=261

###############################################################################
# Configure device host whitelist of HCI host IDs;
# see specification ETSI TS 102 622 V11.1.10(2012-10), section 6.1.3.1
DEVICE_HOST_WHITE_LIST={02}

###############################################################################
# Choose the presence-check algorithm for type-4 tag. If not defined,
# the default value is 1.
# 0 NFA_RW_PRES_CHK_DEFAULT; Let stack selects an algorithm
# 1 NFA_RW_PRES_CHK_I_BLOCK; ISO-DEP protocols empty I-block
# 2 NFA_RW_PRES_CHK_RESET; Deactivate to Sleep, then re-activate
# 3 NFA_RW_PRES_CHK_RB_CH0; Type-4 tag protocols ReadBinary command on channel 0
# 4 NFA_RW_PRES_CHK_RB_CH3; Type-4 tag protocols ReadBinary command on channel 3
PRESENCE_CHECK_ALGORITHM=3

# getVenderConfig v1.1 end
###############################################################################  
  
###############################################################################
# File used for NFA storage(HAL)
NFA_STORAGE="/data/vendor/nfc"

###############################################################################
# Snooze Mode Settings
#
#  By default snooze mode is disable.
#
#  If SNOOZE_MODE_CFG is not provided, the default settings are used:
#  They are as follows:
#       0             Sleep Mode (0=Disabled 1=UART 8=SPI/I2C)
#       0             Idle Threshold Host
#       0             Idle Threshold HC
#       0             NFC Wake active mode (0=ActiveLow 1=ActiveHigh)  PON
#       1             Host Wake active mode (0=ActiveLow 1=ActiveHigh) NoAssign
#
SNOOZE_MODE_CFG={08:00:00:00:01}

###############################################################################
# Insert a delay in milliseconds after NFC_WAKE and before write to NFCC
NFC_WAKE_DELAY=20

###############################################################################
# Various Delay settings (in ms) used in USERIAL
#  POWER_ON_DELAY
#    Delay after turning on chip, before writing to transport (default 300)
#  PRE_POWER_OFF_DELAY
#    Delay after deasserting NFC-Wake before turn off chip (default 0)
#  POST_POWER_OFF_DELAY
#    Delay after turning off chip, before USERIAL_close returns (default 0)
#
#POWER_ON_DELAY=300
#PRE_POWER_OFF_DELAY=0
#POST_POWER_OFF_DELAY=0

###############################################################################
# Maximum time (ms) to wait for RESET NTF after setting REG_PU to high
# The default is 1000.
NFCC_ENABLE_TIMEOUT=1000

###############################################################################
# Startup Configuration (100 bytes maximum)
#  byte[0] is the length of the remaining bytes in this value
#     if set to 0, Startup Configuration params will NOT be sent to NFCC (i.e. disabled).
#  See nfc_hal_dm_cfg.c for defaults
#
#  byte[0] TLV total len = 0xC
#  byte[1] LISTEN_EXTENTION_TIME(0xD1)
#  byte[2] len
#  byte[3] 250ms (0x19)
#  byte[4] LPP_N(0xD2)
#  byte[5] len
#  byte[6] inf. (0xff)
#  byte[7] FSAM_SHUTDOWN_START_TIME(0xD3)
#  byte[8] len
#  byte[9] 0ms (0x00)
#  byte[10] PV_DATA_CODING(0xA0)
#  byte[11] len
#  byte[12] 1out of 4 coding(0x01)
NFA_DM_START_UP_CFG={0C:D1:01:19:D2:01:ff:D3:01:00:A0:01:01}

###############################################################################
# Startup Vendor Specific Configuration (100 bytes maximum);
#NFA_DM_START_UP_VSC_CFG={00} #default
#  byte[0] TLV total len = 0x13
#  byte[1..3] OPTION_GET_VERSION(0x2F2000)
#
#  byte[4..19] OPTION_MEM_ACCESS_CMD
#    ADD:0x0100 0034
#     WDT_ENABLE[31..24] disable
#     IC2_RST_ENABLE[23..16] XRST
#     WDT_TIMEOUT[15..0] 3000ms
#    DATA:0x0001 0BB8
#
NFA_DM_START_UP_VSC_CFG={13:2f:20:00:2F:3A:0D:02:01:00:04:00:34:00:00:01:00:01:0B:B8}

###############################################################################
# Maximum Number of Credits to be allowed by the NFCC
#   This value overrides what the NFCC specifices allowing the host to have
#   the control to work-around transport limitations.  If this value does
#   not exist or is set to 0, the NFCC will provide the number of credits.
#MAX_RF_DATA_CREDITS=1

###############################################################################
# Firmware patch file
#  If the value is not set then patch download is disabled.
FW_PATCH="/vendor/firmware/cxd225x_firmware.bin"

###############################################################################
# SPD Debug mode
#  If set to 1, any failure of downloading a patch will trigger a hard-stop
#SPD_DEBUG=0

###############################################################################
# SPD Max Retry Count
#  The number of attempts to download a patch before giving up (defualt is 3).
#  Note, this resets after a power-cycle.
#SPD_MAX_RETRY_COUNT=3

###############################################################################
# transport driver
#
# TRANSPORT_DRIVER=<driver>
#
#  where <driver> can be, for example:
#    "/dev/ttyS"        (UART)
#    "/dev/bcmi2cnfc"   (I2C)
#    "hwtun"            (HW Tunnel)
#    "/dev/bcmspinfc"   (SPI)
#    "/dev/btusb0"      (BT USB)
#TRANSPORT_DRIVER="/dev/ttyS"
#TRANSPORT_DRIVER="/dev/ttyUSB"
TRANSPORT_DRIVER="/dev/cxd224x-i2c"

###############################################################################
# power control driver
# Specify a kernel driver that support ioctl commands to control NFC_EN and
# NFC_WAKE gpio signals.
#
# POWER_CONTRL_DRIVER=<driver>
#  where <driver> can be, for example:
#    "/dev/nfcpower"
#    "/dev/bcmi2cnfc"   (I2C)
#    "/dev/bcmspinfc"   (SPI)
#    i2c and spi driver may be used to control NFC_EN and NFC_WAKE signal
POWER_CONTROL_DRIVER="/dev/cxd224x-i2c"

###############################################################################
# UART transport driver options
#
# PORT=1,2,3,...
# BAUD=115200, 19200, 9600, 4800,
# DATABITS=8, 7, 6, 5
# PARITY="even" | "odd" | "none"
# STOPBITS="0" | "1" | "1.5" | "2"
# FC="none" | "hw"

#UART_PORT=2
UART_PORT=0
UART_BAUD=115200
UART_DATABITS=8
UART_PARITY="none"
UART_STOPBITS="1"
UART_FC="hw"

###############################################################################
# Insert a delay in microseconds per byte after a write to NFCC.
# after writing a block of data to the NFCC, delay this an amopunt of time before
# writing next block of data.  the delay is calculated as below
#   NFC_WRITE_DELAY * (number of byte written) / 1000 milliseconds
# e.g. after 259 bytes is written, delay (259 * 20 / 1000) 5 ms before next write
NFC_WRITE_DELAY=0

###############################################################################
# CXD22xx addtional options

###############################################################################
# Hal init control : initialization ctrl under HAL
# 0x1: NFC_DEVICE_RESET, assert xrst after open transport
# 0x4: NFC_SEND_DEVINFO, send devinfo(HW/FW/PATCH info) to upperlayer when HAL_NfcPreInitDone()
HAL_INIT_CTRL=0x1

###############################################################################
# Hal nci packet control : initialization ctrl under HAL
# 0x1: NFC_INTF_ACTIVATE_KOVION, Kovio: drop length feild from tech spec
#      paramter of INTF_ACTIVATE
HAL_NCIPKT_CTRL=0x1

###############################################################################
# Various Delay settings (in ms) used in USERIAL
#  DEVICE_RESET_DELAY
#    Delay after assert device reset, before open transport (default 20)
DEVICE_RESET_DELAY=20

###############################################################################
# Low Power Idle Timeout
# The timeout value of NFC_HAL_LP_IDLE_TIMEOUT is fixed value on compile time.
# This value can be changed by using HAL_LP_IDLE_TIMEOUT in this config file
# The time unit is msec
HAL_LP_IDLE_TIMEOUT=210
HAL_LP_IDLE_LONG_TIMEOUT=2000

###############################################################################
# CXD224X default RF_SET_LISTEN_MODE_ROUTING_CMD
#   byte[0] is TLV total len
#   byte[1...x] is Routing Entry [1..n]
#
# byte[0]=0x19(25)
# Routing Entry[1]=TECH_ROUTING,     NFCEE_ID=DH, Battery_off=0,Switch_off=0,Switch_on=1, TypeA
# Routing Entry[2]=TECH_ROUTING,     NFCEE_ID=DH, Battery_off=0,Switch_off=0,Switch_on=1, TypeB
# Routing Entry[3]=TECH_ROUTING,     NFCEE_ID=DH, Battery_off=0,Switch_off=0,Switch_on=1, TypeF
# Routing Entry[4]=PROTOCOL_ROUTING, NFCEE_ID=DH, Battery_off=0,Switch_off=0,Switch_on=1, ISO-DEP
# Routing Entry[5]=PROTOCOL_ROUTING, NFCEE_ID=DH, Battery_off=0,Switch_off=0,Switch_on=1, NFC-DEP
LMR_CFG={19:00:03:00:01:00:00:03:00:01:01:00:03:00:01:02:01:03:00:01:04:01:03:00:01:05}

###############################################################################
# Startup Vendor Specific Devive memory RWM Configuration (100 bytes maximum);
#  rmwdata[addr] = (rdata[addr] & ~wmask)|(wdata & wmask)
#
#  byte[0]             TLV total len = 0x18
#  byte[1][2][3][4]     addr0(le)
#  byte[5][6][7][8]     wmask0
#  byte[9][10][11][12]  wdata0
#  byte[13][14][15][16] addr1(le)
#  byte[17][18][19][20] wmask1
#  byte[21][22][23][24] wdata1
#NFA_DM_START_UP_RMW_CFG={18:4c:7f:00:01:00:00:ff:00:00:00:01:00:50:7f:00:01:ff:00:00:ff:01:00:00:01}

###############################################################################
# Closing Vendor Specific Configuration (100 bytes maximum);
# Send the following vsc commands to NFCC when call Nfc::closeForPowerOffCase()
#
#  byte[0]      TLV total, if set to 0 vsc command will NOT be sent to NFCC
# MEM_ACC_CMD: WDT_ENABLE(SPD)/I2C_RST_ENABLE(XRST),3000ms
#  byte[1][2]   MEM_ACC_CMD(2f:3a)
#  byte[3]      len=13
#  byte[4]      2
#  byte[5]      1(write)
#  byte[6]      0(option)
#  byte[7]-[8]   0x0004(le:size)
#  byte[9]-[12]  0x01000034(le:addr)
#  byte[13]-[16] 0x04010BB8(be:data)
NFA_DM_CLOSING_VSC_CFG={10:2F:3a:0d:02:01:00:04:00:34:00:00:01:04:01:0b:b8}

###############################################################################
# FactoryReset Vendor Specific Configuration (100 bytes maximum);
# Send the following vsc commands to NFCC when call Nfc::factoryReset()
#
#  byte[0]      TLV total, if set to 0 vsc command will NOT be sent to NFCC
# UIM_REG:
#  byte[1][2]   SET_UIM_REG(2f:36)
#  byte[3]      len=11
#  byte[4]      9
#  byte[5]      1
#  byte[6]      8
#  byte[7]-[10]   0xffffffff
#  byte[11]-[14]  0xffffffff
NFA_DM_FACTORYRST_VSC_CFG={0e:2F:36:0b:09:01:08:ff:ff:ff:ff:ff:ff:ff:ff}
